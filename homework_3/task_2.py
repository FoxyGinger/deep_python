# В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.
import string

TEXT = """
Основной причиной роста Python в рейтинге исследователи называют универсальность языка. Как и Java, Python применяется в огромном количестве областей и способен справляться с абсолютно разными задачами. Эта пластичность в плане применения и делает Python столь привлекательным для множества разработчиков по всему миру. Дополняет указанный фактор еще и низкий порог вхождения в язык, так что армия «питонистов», как в случае с PHP или JS, постоянно пополняется новыми и новыми людьми.
Рост популярности Python выглядит еще более внушительным, если вспомнить о прекращении поддержки Python 2 и перспективе вынужденной миграции множества проектов на Python 3 или переписывание их под другие языки программирования. Конечно, поддержку Python 2 планировалось завершить еще в 2015 году, однако сообществу потребовалось намного больше времени для того, чтобы адаптироваться к изменениям.
В целом, весь рейтинг дает некоторую пищу для размышлений. На четвертой строчке рейтинга ожидаемо разместился комфортно чувствующий себя PHP, а вот следом идут два таких серьезных языка как C# и C++. На 11 позиции Swift еле-еле опережает Objective-C, который он, якобы, должен был практически полностью заменить. «Хайповые» языки последних лет — Scala, Go и Kotlin — вообще во второй десятке."""


def get_top_10_words(text: str):
    text = text.lower().translate(text.maketrans({key: None for key in string.punctuation}))
    words = text.split()
    word_count = dict()
    for word in words:
        if word not in word_count.keys():
            word_count[word] = words.count(word)

    sorted_words = sorted(word_count.items(), key=lambda item: item[1], reverse=True)
    for word, count in sorted_words[:10]:
        print(f'Слово "{word}" встречается {count} раз')


get_top_10_words(TEXT)
